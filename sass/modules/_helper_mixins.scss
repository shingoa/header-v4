@charset "UTF-8";

@mixin xrx_bnrv4_positionit
{
	@if $fix-mqs {
		width: $page_width;
	}
	@else {
		max-width: $page_width;
		width: 100%;
	}

	margin: 0 auto;
	display: block;
}

@mixin xrx_bnrv4_resetlist
{
	list-style-type: none;
	padding: 0;
	margin: 0;

	> li {
		margin: 0;
		padding-right: 0;
	}
}

@mixin xrx_bnrv4_inlinelist
{
	@include xrx_bnrv4_resetlist;

	> li {
		display: inline-block;

		> a,
		> span,
		> label {
			white-space: nowrap;
		}
	}
}

@mixin xrx_bnrv4_list_dividers($side: right, $margin: 10px)
{
	&:first-child {
		> span,
		> label[for],
		> a {
			margin-left: 0;
		}
	}
	&:last-child {
		> span,
		> label[for],
		> a {
			margin-right: 0;
		}
	}

	> label[for],
	> a {
		cursor: pointer;
	}

	> span,
	> label[for],
	> a {

		$computedMargin: $margin;

		@if ($page_width <= 740px) {
			$computedMargin: round($margin - (($margin / 100) * 30));
		}
		@else if ($page_width <= 940px) {
			$computedMargin: round($margin - (($margin / 100) * 20));
		}

		margin-left: $computedMargin - 1px;
		margin-right: $computedMargin;

		&:before {
			#{$side}: $computedMargin * -1;
		}

		position: relative;
		margin-bottom: 0;
		user-select: none;
		-o-user-select:none;
		-moz-user-select: none;
		-khtml-user-select: none;
		-webkit-user-select: none;

		&:before {
			content: "";
			display: block;
			position: absolute;
			top: 20%;
			bottom: 20%;
			width: 1px;
			background-color: #dbdbdb;
			border: none !important;
		}

		&.xrx_bnrv4_header_no_divider
		{
			margin-left: 0;
			margin-right: 0;

			&:before {
				display: none;
			}
		}
	}

	&:first-child
	{
		> label,
		> a
		{
			@if ($side == left)
			{
				padding-left: 0;
				margin-left: 0;

				&:before {
					display: none;
				}
			}
		}
	}

	&:last-child
	{
		> label,
		> a
		{
			@if ($side == right)
			{
				padding-right: 0;
				margin-right: 0;

				&:before {
					display: none;
				}
			}
		}
	}

	@include respond-max($break_tablet)
	{
		&.xrx_hide_mobile + li {
			> span,
			> label[for],
			> a {
				margin-left: 0;
			}
		}
	}
	@include respond-min-max($break_tablet, $break_desktop)
	{
		&.xrx_hide_tablet + li {
			> span,
			> label[for],
			> a {
				margin-left: 0;
			}
		}
	}
}

@mixin has_feature($feature)
{
	.#{$feature} &
	{
		@content;
	}
}

@mixin missing_feature($feature)
{
	.no-#{$feature} &
	{
		@content;
	}
}

@mixin xrx_bnrv4_right_arrow
{
	content: "\0000a0\276F";
	font-family: "Arial";
	font-size: 90%;
	margin-left: 5px;

	@include missing_feature("csstransforms")
	{
		content: "\0000a0>";
	}
	@include has_feature("ie-9")
	{
		content: "\0000a0>";
	}
	@include has_feature("ie-8")
	{
		content: "\0000a0>";
	}
}

@mixin xrx_bnrv4_left_arrow
{
	font-family: "Arial";
	content: "\276E\0000a0";
	font-size: 90%;

	@include missing_feature("csstransforms")
	{
		content: "<\0000a0";
	}
	@include has_feature("ie-9")
	{
		content: "<\0000a0";
	}
	@include has_feature("ie-8")
	{
		content: "<\0000a0";
	}
}

@mixin xrx_bnrv4_down_arrow
{
	font-family: "Arial";
	content: "\276F";
	display: inline-block;
	margin-left: 12px;
	position: relative;
	top: 1px;
	@include transform(rotate(90deg));
	font-size: 90%;
	margin-right: 2px;

	@include missing_feature("csstransforms")
	{
		content: "∨";
		@include transform(none);
	}
	@include has_feature("ie-9")
	{
		content: "∨";
		@include transform(none);
	}
	@include has_feature("ie-8")
	{
		content: "∨";
		@include transform(none);
	}
}

@mixin checked()
{
	&:checked {
		@content;
	}

	@if $fix-mqs
	{
		&.checked {
			@content;
		}
	}
}
